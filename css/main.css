/* Doodad CSS */

/* The main styling CSS */
@import "buttondown.css";

/* Decorate some filetypes */
@import "linkTypeIcons/linkTypeIconsRight.css";

/* Attempt to handle iOS devices */
@import "iOS.css";

/* The breadcrumb trail generated by the PHP script and added to the HTML 
    via the Pandoc template variable $crumbs$. It is already additionally classed 
    as banner and noprint, which styles it like the banner. Here, we park it neatly 
    underneath so it looks like an extension of it.
*/

#breadcrumbs
    {
    margin-top: 0;
    padding-top: 0.2em;
    padding-bottom: 0.2em;
    padding-left: 1em;
    padding-right: 1em;
    border-bottom: 1px solid #aaa;
    text-align: center;
    background-color: #F4F4F4;
    }
#breadcrumbs
    {
    border-bottom: none;
    border-radius: 5px;
    box-shadow: 2px 2px 5px #bbb;
    }

span.crumbCurrent
    {
    font-weight: bold;
    }
    
.banner
    {
    background-color: transparent;
    box-shadow: none;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid #aaa;
    }

.banner
    {
    border-bottom: none;
    }
   
#letterhead
    {
    border:none;
    border-bottom: 1px solid #aaa;
    }
    
/* To have an unstyled table for alignment, put a table inside a 
   <div class="unstyled" style="margin-left:auto; margin-right:0;">
   or just <div class="unstyled right"> since the left, right, and center 
   classes are defined below as well. Put blank lines between the div tags and 
   the table so the Markdown table parses correctly.
   
   This only works for HTML, obviously. This table will still be styled in PDF.
   You could argue that is why we shouldn't style tables by default in HTML, but 
   they will always be styled in PDF, which is why I decided to style them in HTML 
   since you couldn't assume they would not be styled and use them for alignment.
   I figured that we could do other things for alignment.
   
   If you just want to align a normal styled table, you can wrap that in just a 
   <div class="left"> (or right) and leave "unstyled" out of the class.
   
   NOTE: we can define 'unstyled' for other elements here such as: div.unstyled pre
*/

div.unstyled
    {
    margin-left: 0;
    }

div.unstyled table
    {
    border-top: none;
    border-bottom: none;
    /* Use the alignment specified in the enclosing unstyled div */
    margin-left:  inherit;
    margin-right: inherit;
    
    }
div.unstyled tr:hover
    {
    background-color: inherit; /* Others? */
    background-color: transparent; /* Safari - inherit doesn't work */
    }

div.unstyled pre, div.unstyled code
    {
    background-color: transparent;
    box-shadow: none;
    border: none;
    }

div.wide table
    {
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    }
     
div.block-center table
    {
    margin-left: auto;
    margin-right: auto;
    }
div.text-center table
    {
    text-align: center;
    }
    
/* Some styles for img borders by using the "title" attribute of an image link 
    Use like this:  ![Alt text](myImage.png "photo border")
    or: 
        ![My caption][myphoto]
        
        [myphoto]: myImage.jpg "border shadow"

    It's not ideal since you can't use the title attribute when you want to use
    the image border styles.
*/

@media screen
{
img[title ~= "shadow"] /* drop shadow */
    {
    box-shadow: 3px 3px 5px #bbb;
    }
}
@media print
{
img[title ~= "shadow"] /* drop shadow */
    {
    box-shadow: 3px 3px 0px #bbb;
    }
}

img[title ~= "border"] /* A white border with grey edge */
    {
    padding: 10px;
    border: 1px solid #ccc;
    }

img[title ~= "rounded"] /* Rounded corners */
    {
    border-radius: 10px;
    }

img[title ~= "box"] /* Box around with no border */
    {
    border: 1pt solid #000;
    }

img[title~="right"] /* float right */
    {
    float: right;
    clear: right;
    margin-left: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
    }

img[title~="left"] /* float left */
    {
    float: left;
    clear: left;
    margin-right: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
    }

div.figure img /* Put back these props for figure imgages since we can't exclude them easily in the prior rules */
    {
    float: none; /* Don't allow fig img to float */
    clear: both;
    }
    
img[title ~= "top"]
    {
    vertical-align: top;
    }
    
img[title ~= "bottom"]
    {
    vertical-align: bottom;
    }

img[title ~= "middle"]
    {
    vertical-align: middle;
    }

img[title ~= "baseline"]
    {
    vertical-align: baseline;
    }

img[title ~= "margin"]
    {
    margin-left: 10px;
    margin-right: 10px;
    }

img[title ~= "<=100%"]
    {
    max-width: 100%;
    }
    
img[title ~= "<=50%"]
    {
    max-width: 50%;
    }

/* Right class */

.right
    {
    text-align: right;
    }

div.right
    {
    float: right;
    clear: right;
    margin-left: 1em;
    margin-top: 1em;
    margin-bottom: 1em;
    text-align: left;
    }

